{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Medium;\f2\fnil\fcharset128 HiraginoSans-W3;
\f3\fnil\fcharset0 HelveticaNeue-Italic;\f4\fnil\fcharset128 HiraginoSans-W5;\f5\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
}
{\colortbl;\red255\green255\blue255;\red27\green31\blue35;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18431;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1104\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1105\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li3600\lin3600 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1203\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid2003\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid2004\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid24}
{\list\listtemplateid25\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid25}
{\list\listtemplateid26\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid26}
{\list\listtemplateid27\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid27}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}{\listoverride\listid25\listoverridecount0\ls25}{\listoverride\listid26\listoverridecount0\ls26}{\listoverride\listid27\listoverridecount0\ls27}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dot Net and CSharp Basics\
\pard\pardeftab720\li160\ri160\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/220328-uta-sh-net-ext/training-code"}}{\fldrslt 
\f1\b\fs32 \cf2 training-code}}
\fs32 /{\field{\*\fldinst{HYPERLINK "https://github.com/220328-uta-sh-net-ext/training-code/tree/main/B-C%23-Basic"}}{\fldrslt B-C#-Basic}}/
\f1\b Notes.md
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/220328-uta-sh-net-ext/training-code/find/main"}}{\fldrslt 
\f1\fs28 \cf2 Go to file}}
\f1\fs28 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 \
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/kaurrevature"}}{\fldrslt \cf2 }}\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/kaurrevature"}}{\fldrslt 
\f1\b \cf2 kaurrevature}}\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/220328-uta-sh-net-ext/training-code/commit/0c8a158a48cd2c5cace0f364d6cb865d531d8261"}}{\fldrslt C# OOP app start}}\
\pard\pardeftab720\sl640\partightenfactor0

\f1\b\fs64 \cf2 \
\pard\pardeftab720\sl800\sa320\partightenfactor0
\cf2 Welcome to .NET\
\pard\pardeftab720\sl480\partightenfactor0

\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 What is .NET?\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls1\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET is an open source developer platform created by Microsoft. It's for building many different types of apps, such as web apps, desktop apps, games, api, smart phones apps....\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In short, .NET Platform is a collection of\'a0
\f1\b languages
\f0\b0 ,\'a0
\f1\b libraries
\f0\b0 , and\'a0
\f1\b frameworks
\f0\b0 \'a0to make various applications, developed under one common standard.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 With .Net platform you can build your app, test app, deploy the app and maintain. This is why .Net caters mostly all phases of SDLC.\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 Supported Programming Languages\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls2\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dozens of programming languages are supported by .Net provided they are compatible with the platform,\'a0{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/List_of_CLI_languages"}}{\fldrslt listed.}}\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 3 different languages which are by default supported by .Net are\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C#}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 : Features are:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object oriented, type safe language and is case sensitive\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls2\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 object oriented means, that everything is an object. These objects are further organized with classes\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type-safe means that once you declare a type of a variable, you can't really change it.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Component-oriented\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lambda Expression, LINQ (Language Integrated Query), asynchronous operations ...\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Visual Basic : Supports UI and component oriented language.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 F#: F# is a functional programming language supported by .NET\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All .Net compliant languages ahve to follow a Standard. These standard are defined by CLS (Common Language Specification).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CLS gives a set of rules and regulation a .Net compliant language should follow. Ex all .Net compliant languages should be OOP languages, Array index should start from 0 etc...\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 Technologies we'll be using during this training\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls3\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET 6 SDK (Runtime, toolkit to devlop apps, .Net CLI) and C#\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SQL (Sql Server)\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ASP.NET Core for creating web applications\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Azure Cloud Service for hosting\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Javascript, Typescript, HTML, CSS, jQuery and Angular for frontend\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/core/porting/versioning-sdk-msbuild-vs"}}{\fldrslt \cf2 History of .Net}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls4\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Microsoft introduced .Net 1.0 (deprecated) in 2002. It was known as .Net Framework\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 .NET Implementation\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f0\b0\fs32 \cf2 4 main implementation of .NET\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls5\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET Framework
\f0\b0 : first implementation of .NET, only works on windows, and it is shipped with every windows.\
\ls5\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET / .NET Core
\f0\b0 : .NET Core is the cross-platform implemtation of .NET, and is a successor of .NET Framework.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This is a primary implementation of .NET and is the focus of ongoing development effort. This what we'll be using. -.NET 5\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls5\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mono\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls5\ilvl1
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET runtime that power Xamarin application.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 useful when small footprint is needed\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 also powers games built with Unity\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls5\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Universal Windows Platform (UWP)\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls5\ilvl1
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used for building modern, touch-enabled Windows applications and software for the Internet of Things (IoT).\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It's designed to unify the different types of devices that you may want to target, including PCs, tablets, phones, and even the Xbox.\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 Components of .NET Implementation\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls6\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 One or more runtime: Example, .NET Framework CLR, .NET 5 CLR\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls6\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CLR stands for\'a0
\f3\i Common Language Runtime
\f0\i0 \'a0and it's a runtime environment provided by .NET\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A class library, for example, .NET Framework Base Class Library, or .NET 5 Base Class Library.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optionally, we have one or more application frameworks, such as ASP.NET Core for web application development, Windows Forms, etc.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optionally, development tools. Some are shared among multiple implementations.\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b \cf2 \
\pard\pardeftab720\sl400\sa320\partightenfactor0
\cf2 CLR? SDK?\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls7\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CLR Stands for Common Language Runtime, and it's runtime environment. It is also know as main execution Engine and is used to run any .Net application.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SDK stands for Software Development Kit.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CLR comes included in SDK\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 .NET Standard\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls8\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET Standard is a base set of API's that are common to all .NET implementation.\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Additional Frameworks\
\pard\pardeftab720\sl480\sa320\partightenfactor0

\f0\b0\fs32 \cf2 These are frameworks that extend .NET platform to provide additional functionalities.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls9\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ASP.NET Core
\f0\b0 : Open source framework for building web apps and web services\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls9\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 it's a redesign on ASP.NET 4.x with architectural changes that result in a lener, more modular framework\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls9\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unity
\f0\b0 : Real-time 3D development platform\
\ls9\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UWP (Universal Windows Platform)
\f0\b0 : for developing various windows applications\
\ls9\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Xamarin
\f0\b0 : for mobile development\
\ls9\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ML.NET
\f0\b0 : machine learning\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls9\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 and more..\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Other Niceties..\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls10\ilvl0
\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Nuget
\f0\b0 : a package manager for .NET\
\pard\pardeftab720\sl480\sa320\partightenfactor0
\cf2 .NET 5 ASP.NET: ASP.NET Core to match with .NET Core\
\pard\pardeftab720\sl640\partightenfactor0

\f1\b\fs64 \cf2 \
\pard\pardeftab720\sl800\sa320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-gb/users/dotnet/collections/yz26f8y64n7k07?WT.mc_id=dotnet-35129-website"}}{\fldrslt \cf2 Basics of C#}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls11\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C# is Case-Sensitive, Object-Oriented, Component Oriented language\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls11\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object-oriented means everythign is based on objects and classes and the relationships between them\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls11\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C# has coding syntax resembling other programming languages like C, C++, Java. Not that they wanted to copy them but for ease of developers to adopt this programming language.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It is a type safe language. Type Safety is because of component of .Net known as\'a0
\f1\b CTS
\f0\b0 \'a0(Common Type System).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls11\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type-safe meaning once you set a datatype you can't change the datatype (unless you use certain techniques to do it)\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 Anatomy of C# program\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls12\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 namespace -> Types -> Type members\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Namespaces are used to organize C#'s many classes and to control scope of class and methods in large programming project\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls12\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Namespace\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls12\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Types - Members (Methods, variables, properties)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls12\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Types (Classes, Enums, Structs, Interface, Delegates)\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls12\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All types in C# are inherited directly or indirectly\'a0
\f1\b System.Object\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls12\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9642 
\f1 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Value Types\
}}\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls12\ilvl3
\f0\b0 \cf2 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 which stores the direct value,\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 stored in memory Stack,\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stack is always faster to retrieve data than heap\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Every value type has a set of memory set aside for it to occupy (Ex: int can only store 32-bits while a double can store 64-bits) and stack memory is all about structure for efficiency and how data cannot be dynamically changing in size\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex Predefined (int, long, short, byte, DateTime, char)\
\pard\tx3100\tx3600\pardeftab720\li3600\fi-3600\sl480\partightenfactor0
\ls12\ilvl4\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Structs - like a class but gets stored in the stack for memory retrieval efficiency\
\ls12\ilvl4\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enums - defines a set of named integral constants\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls12\ilvl2
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9642 
\f1 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reference Types\
}}\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls12\ilvl3
\f0\b0 \cf2 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 They are datatypes that are stored in the heap and reference variables that are stored in the stack\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Think of reference variables as having the address of a house since an address only holds the info on where the house is and not the actual house itself\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When you declare a variable of a reference type and not have it point to anything in the beginning, it will have a null value\
\pard\tx3100\tx3600\pardeftab720\li3600\fi-3600\sl480\partightenfactor0
\ls12\ilvl4\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Null in the coding world means lack of value or there isn't any value at all\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls12\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reference variables are stored in the stack while the actual object itself is stored in the heap\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 retrieval a value from heap is an expensive process.\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why the heap? since memory in the heap can be dynamically changing\
\ls12\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex Predefined -> string, arrays, collections etc, Classes, interface, Delegates.\
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 Conversion\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls13\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C# is statically typed at compiled time. Meaning after a variable is declared, it cannot be declared again.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 However, it is possible to change the variable type\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls13\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/conversions"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type Conversion}}
\f0\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0: conversion of 1 type into another\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\sa320\partightenfactor0
\ls13\ilvl1
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implicit type conversion
\f0\b0 \'a0:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls13\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generally, it is when you can convert the type without any data loss\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mostly used with numerical datatypes\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No special syntax needed to write and compiler will do it for you\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 no need to type cast manually/explicitly.\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex byte value can be placed in int; converting an int into a double\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\sa320\partightenfactor0
\ls13\ilvl1
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explicit type conversion
\f0\b0 \'a0:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls13\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If there is a risk of losing information, you must perform a\'a0
\f1\b Cast
\f0\b0 \
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Special syntax is needed to write to tell the compiler to do it anyway\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Casting is denoted with (datatype)\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 type cast it using\'a0
\f5\fs27\fsmilli13600 <datatype>.Parse(value)
\f0\fs32 ,\'a0
\f5\fs27\fsmilli13600 Convert.<datatype>(value)
\f0\fs32 . You can have a data loss if its not fitting in the type.\
\ls13\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The\'a0
\f5\fs27\fsmilli13600 Parse
\f0\fs32 \'a0method returns the converted number; the\'a0
\f5\fs27\fsmilli13600 TryParse
\f0\fs32 \'a0method returns a boolean value that indicates whether the conversion succeeded, and returns the converted number in an\'a0
\f5\fs27\fsmilli13600 out
\f0\fs32 \'a0parameter.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls13\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Boxing
\f0\b0 - refers to conversion Value type to reference types.\
\ls13\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unboxing
\f0\b0 - refers to conversion of reference types to value types.\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/"}}{\fldrslt \cf2 Expressions}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls14\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 An expression is a sequence of operators and operands.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls14\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex int c = a + b;\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl394\partightenfactor0
\ls14\ilvl0
\f5\fs27\fsmilli13600 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [(6/2)+2*3-1]\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 - 3 + 2 * 3 - 1\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 - 3 + 6 - 1\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 - 9 - 1\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 - 8\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f0\fs32 \uc0\u8232 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\b\fs48 \cf2 \
\pard\pardeftab720\sl600\sa320\partightenfactor0
\cf2 What is Object-Oriented programming?\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls15\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It is a methodology we use to design our programs just using classes and objects\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It makes it a lot easier to develop and maintain your project as it gets bigger\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Classes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls16\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 They are templates that are used to create objects and define the object's functions and current state (essentially what information they currently store)\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Objects\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls17\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It is any entity that has a state and behavior\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 They are made from classes and will copy whatever state and behavior the class has defined\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Overall\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls18\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Classes are blueprints and Objects is the actual object from the blueprint\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex: A blueprint of a car, tells you how to make a car but it isn't the car itself (The Class) The multiple cars you make from same blueprint (The Objects of that Class)\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Methods\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls19\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A method is a member that implements the behaviour or action or computation that can be performed by an object or class.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 static methods - they accessed through class\
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 instance methods - they are accessed through instance of the class\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Arrays\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls20\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used to store a datatype and have fixed sizes\
\ls20\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Zero-based index\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls20\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 0 is the starting position of the array\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls20\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Other arrays you can make:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls20\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multidimensional arrays - int[,] ex = new int[4,2]; would create [ [0, 0], [0, 0], [0, 0], [0, 0] ]\
\ls20\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Jagged arrays - arrays inside of an array are different sizes [ [0, 0, 0], [0, 0], [0, 0, 0], [0, 0 , 0, 0] ]\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/standard/collections/"}}{\fldrslt \cf2 Collections}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls21\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Similar data can often be handled more efficiently when stored and manipulated as a collection.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can use arrays, non-generic or generics.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arrays have fixed size and every element must have a value if no value is provided it contains the default.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arrays cannot be grown or shrinked. This where collection solves the problem.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C# offers 2 categories of Collections:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 non-generics\
\ls21\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 generics\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls21\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Non-generic
\f0\b0 \'a0collections store items as Object, require casting. Performance concerns were arised due to this casting and also Garbage Collection.\
\ls21\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generic collections
\f0\b0 \'a0are type-safe at compile time. Because of this, generic collections typically offer better performance.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generic collections accept a type parameter when they are constructed and do not require that you cast to and from.\
\ls21\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The "T" you see in documentation is where you put what data type that collection will hold\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls21\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All collections provide methods for adding, removing, or finding items in the collection.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All collections can be\'a0
\f1\b enumerated
\f0\b0 \'a0by virtue of\'a0
\f1\b Enumerator
\f0\b0 .\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 An enumerator can be thought of as a movable pointer to any element in the collection.\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Types of Generic Collections:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stack\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LIFO - It is a Last-in, First-out list\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Major Operations\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Push - Add element into stack\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pop - Remove an element from TOP\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Peek - Retrieve the TOP element\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Queue\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 FIFO - A first-in, first-out list\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Major Operations\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enqueue - Add element into Queue\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dequeue - Remove element from Queue\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Peek - Retrieve the TOP element\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Like any array which can grow and shrink dynamically.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Items in the list can be accessed by index.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It can accept null as a valid value for reference types and it also allows duplicate elements.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List class is not sorted by default and elements are accessed by zero-based index.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Properties\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Capacity - Gets or sets the total number of elements the internal data structure can hold without resizing.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Count - Gets the number of elements contained in the List\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods:\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add(T) - Adds an object to the end of the List\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Clear() - Removes all elements from the List\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Insert(index, T) - Inserts an element into the List at the specified index\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Remove(T) - Removes the first occurrence of a specific object from the List\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RemoveAt(index) - Removes the element at the specified index of the List\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reverse() - Reverses the order of the elements in the List or a portion of it\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 HashSet\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It is an unordered collection of the unique elements.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It prevent duplicates from being inserted in the collection.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dictionary<Tkey,TValue>\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It stores key/value pairs\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keys must be Unique\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SortedList<TKey,TValue>\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It is a sorted list of key/value pairs\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls21\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LinkedList\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It allows fast inserting and removing of elements. It implements a classic linked list.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Each element is separately allocated.\
\ls21\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Properties:\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Count - Gets the number of nodes actually contained in the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 First - Gets the first node of the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Last - Gets the last node of the LinkedList.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl480\partightenfactor0
\ls21\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods:\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl480\partightenfactor0
\ls21\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AddFirst - Adds a new node or value at the start of the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AddLast - Adds a new node or value at the end of the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Clear() - Removes all nodes from the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Contains(T) - Determines whether a value is in the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Remove(LinkedListNode) - Removes the specified node from the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Remove(T) - Removes the first occurrence of the specified value from the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RemoveFirst() - Removes the node at the start of the LinkedList.\
\ls21\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RemoveLast() - Removes the node at the end of the LinkedList.\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Exceptions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls22\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 An exception is an event that occurs during the execution of a program that distrupts the normal flow of instructions\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls22\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Horrible to encounter when presenting your program (When it is expected to work perfectly fine)\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Great when trying to find bugs in your program\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls22\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 They are not Errors!\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b \cf2 \
\pard\pardeftab720\sl400\sa320\partightenfactor0
\cf2 Errors\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls23\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A serious problem that for the most part cannot be handled by the developer -They are fatal to the program at runtime\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls23\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ex: A stack overflow error and that usually occurs when your computer has run out of memory to store information\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls23\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 3 types of errors\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls23\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Usage error - error in your program logic and can be solve by modifying/restructuring your code\
\ls23\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Program Error - run-time error that cannot be avoided even with a bug-free code (Ex: Your SDK is corrupt and can't compile or translate it to machine code properly)\
\ls23\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 System Failures - run-time error that cannot be handled programmatically in a meaninful way (Ex: your ram hardware is faulty)\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b \cf2 \
\pard\pardeftab720\sl400\sa320\partightenfactor0
\cf2 Exception Handling\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls24\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Using a try-catch block and optionally finally block\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If you know the block of code you will run will have a risk of throwing an exception, you should put it in the try block\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The catch block will then "catch" that exception and will run instead its block of code\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls24\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Once an exception occurs in the try block, the flow of control jumps to the first associated exception handler that is present anywhere in the call stack. In C#, the catch keyword is used to define an exception handler.\
\ls24\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If no exception handler for a given exception is present, the program stops executing with an error message.\
\ls24\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Don't catch an exception unless you can handle it and leave the application in a known state.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls24\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optionally, you can add a finally block that will run regardless if your code throws an exception or not\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls24\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mostly used to clean up any resources you used in the try blcok\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b \cf2 \
\pard\pardeftab720\sl400\sa320\partightenfactor0
\cf2 Throwing Exception\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls25\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can throw an exception yourself in your code by using the throw keyword\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Useful for enforcing certain rules/logic in your program\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b \cf2 \
\pard\pardeftab720\sl400\sa320\partightenfactor0
\cf2 Exception Heirarchy\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls26\ilvl0
\f0\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Certain exceptions are more specific than other exceptions\
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 General rule is the most specific exception should be the very first catch block and the least specific exception is at the very last catch block\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl480\partightenfactor0
\ls26\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why? Well if you made the least specific the first catch block then it will always run if any exception is thrown making your other catch blocks useless\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b\fs40 \cf2 \
\pard\pardeftab720\sl500\sa320\partightenfactor0
\cf2 Additional Resources\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls27\ilvl0
\f0\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/core/introduction"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET Documentation}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls27\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/standard/glossary"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET Glossary}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls27\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://devblogs.microsoft.com/dotnet/introducing-net-5/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Introducing .NET 5}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls27\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://www.codecademy.com/articles/what-is-net"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is .NET?}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls27\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/en-us/dotnet/core/tools/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .Net CLI}}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 \
}